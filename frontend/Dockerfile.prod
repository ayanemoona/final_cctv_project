# frontend/Dockerfile.prod
# Stage 1: Build (기존 Node.js 버전 유지)
FROM node:18-slim as build

WORKDIR /app

# 시스템 도구 설치 (기존 구조 기반)
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# package.json과 package-lock.json 복사 (기존 구조 유지)
COPY package*.json ./

# 환경 변수 설정 (기존 설정 기반)
ENV npm_config_target_platform=linux
ENV npm_config_target_arch=x64
ENV npm_config_cache=/tmp/.npm

# 의존성 설치 (프로덕션 최적화)
RUN npm ci --only=production --silent

# 소스 코드 복사
COPY . .

# 프로덕션 빌드
RUN npm run build

# Stage 2: Production
FROM nginx:alpine

# 빌드된 파일 복사
COPY --from=build /app/dist /usr/share/nginx/html

# Nginx 설정 복사
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 포트 노출 (기존과 동일하게 내부적으로 80 사용)
EXPOSE 80

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:80/health || exit 1

# Nginx 시작
CMD ["nginx", "-g", "daemon off;"]